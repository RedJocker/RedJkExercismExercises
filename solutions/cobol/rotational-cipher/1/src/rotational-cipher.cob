
        IDENTIFICATION DIVISION.
        PROGRAM-ID. rotational-cipher.
        
        DATA DIVISION.
        WORKING-STORAGE SECTION.
        01 WS-KEY PIC 9(2).
        01 WS-CIPHER PIC X(128) VALUE SPACES.
        01 FILL REDEFINES WS-CIPHER.
            05 FILL OCCURS 128 TIMES.
                10 WS-CIPHER-CHAR PIC X(1).
        01 WS-TEXT PIC X(128).
        01 FILL REDEFINES WS-TEXT.
            05 FILL OCCURS 128 TIMES INDEXED BY IDX.
                10 WS-PLAIN-CHAR PIC X(1).
                    88 IS-UPPER-ALPHA VALUE 'A' THRU 'Z'.
                    88 IS-LOWER-ALPHA VALUE 'a' THRU 'z'.
                
        LOCAL-STORAGE SECTION.
        01 LS-CASE-CODE-OFFSET PIC 9(3).
            88 UPPER-OFFSET VALUE 66.
            88 LOWER-OFFSET VALUE 98.
        01 LS-PLAIN-CHAR-NUM PIC 9(3) VALUE ZEROES.
        01 LS-CIPHER-CHAR-NUM PIC 9(3) VALUE ZEROES.
        
        PROCEDURE DIVISION.
        ROTATIONAL-CIPHER.
            INITIALIZE WS-CIPHER
            PERFORM ROTATE-CHAR VARYING IDX FROM 1 BY 1 UNTIL IDX > 128.

        ROTATE-CHAR.
        
            EVALUATE TRUE
                WHEN IS-UPPER-ALPHA(IDX)
                    SET UPPER-OFFSET TO TRUE
                WHEN IS-LOWER-ALPHA(IDX)
                    SET LOWER-OFFSET TO TRUE
                WHEN OTHER
                    MOVE WS-PLAIN-CHAR(IDX) TO WS-CIPHER-CHAR(IDX)
                    EXIT PARAGRAPH
            END-EVALUATE
            
            COMPUTE LS-PLAIN-CHAR-NUM = FUNCTION ORD(WS-PLAIN-CHAR(IDX)) - LS-CASE-CODE-OFFSET
            COMPUTE LS-CIPHER-CHAR-NUM = FUNCTION MOD(LS-PLAIN-CHAR-NUM + WS-KEY, 26)
            SET UPPER-OFFSET TO TRUE
            MOVE FUNCTION CHAR(LS-CIPHER-CHAR-NUM + LS-CASE-CODE-OFFSET) TO WS-CIPHER-CHAR(IDX).
